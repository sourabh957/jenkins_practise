       # explore the click library 
       # parameters, logging level(default = error), what operations do i want to perform, 
       # introduce a check so that divide and sub are not called when more than 2 values are passed
       #   
    1: import fire
    1: import logging
    1: import click
    1: logging.basicConfig(filename="newfile.log",format='%(asctime)s %(message)s',filemode='w')
    1: logger = logging.getLogger()
       
    1: logger.setLevel(logging.DEBUG)
       
       # @click.command()
       # @click.argument('--class_attribute')
       # @click.argument('numbers', type = [])
       
    2: class calculator :
       
    1:     ans = 0
    1:     prev_calculation = 0 
    1:     def __init__(self) :
    1:         self.ans = 0
    1:         self.prev_calculation = 0
       
           # @click.option('--*args', prompt = 'List passed')
    1:     def add(self, *args) :
    6:         logging.info("The add function is called with these parameters {}".format([a for a in args]))  
               # error and trace
               #remove all print and return the value 
               #reuse the variable
    1:         sum = 0 
    1:         prev_calculation = 1
    5:         for x in args : 
    4:             sum += x 
    1:         print(sum)
    1:         return sum
           
           # def average(self, *args) :
           #     if(prev_calculation == 1) :
           #         return prev_calculation / len(args)
           #     return add(args) / len(args) 
       
    1:     def mul(self, *args) :
               logging.info("The mul function is called") 
               sum = 1
               for x in args : 
                   sum *= x 
               return sum
       
    1:     def sub(self, a, b) : 
               logging.info("The sub function is called") 
               return (a - b)
       
    1:     def div(self, a, b) :
               logging.info("The divide function is called") 
               if b == 0 : 
                   return ('Divide by zero error')
               return a / b  
       
       
    1: if __name__ == '__main__' : 
       
    1:     fire.Fire(calculator)
           
